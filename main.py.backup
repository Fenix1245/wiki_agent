# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (–ê–ö–¢–£–ê–õ–¨–ù–´–ô –°–ü–û–°–û–ë)
from langchain_community.embeddings import HuggingFaceEmbeddings
from langchain_community.vectorstores import Chroma
from langchain_community.llms import GigaChat  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å GigaChat –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤
from langchain.chains import RetrievalQA  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ü–µ–ø—å –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞-–æ—Ç–≤–µ—Ç–∞
from langchain.prompts import PromptTemplate  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –≤–æ–ø—Ä–æ—Å–æ–≤
import os
import base64
from dotenv import load_dotenv

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
from langchain_community.embeddings import HuggingFaceEmbeddings
from langchain_community.vectorstores import Chroma
from langchain_community.llms import GigaChat
from langchain.chains import RetrievalQA
from langchain.prompts import PromptTemplate
import os
import base64
from dotenv import load_dotenv

# –ß–ò–¢–ê–ï–ú –ö–õ–Æ–ß –ù–ê–ü–†–Ø–ú–£–Æ –ò–ó –§–ê–ô–õ–ê .env
print("üîç –ß–∏—Ç–∞—é –∫–ª—é—á –Ω–∞–ø—Ä—è–º—É—é –∏–∑ —Ñ–∞–π–ª–∞ .env...")
env_path = '.env'

try:
    with open(env_path, 'r') as f:
        api_key = f.read().strip()
    print(f"‚úÖ –ö–ª—é—á –ø—Ä–æ—á–∏—Ç–∞–Ω –∏–∑ —Ñ–∞–π–ª–∞, –¥–ª–∏–Ω–∞: {len(api_key)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {api_key}")
    
    if not api_key:
        raise ValueError("‚ùå –§–∞–π–ª .env –ø—É—Å—Ç–æ–π")
        
except FileNotFoundError:
    raise ValueError("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
except Exception as e:
    raise ValueError(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ .env: {e}")

# –£ –Ω–∞—Å –£–ñ–ï –∫–ª—é—á –≤ —Ñ–æ—Ä–º–∞—Ç–µ base64, –ø–æ—ç—Ç–æ–º—É –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –∫–∞–∫ –µ—Å—Ç—å
credentials_b64 = api_key

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª—é—á –∑–∞–≥—Ä—É–∑–∏–ª—Å—è
if not api_key:
    raise ValueError("‚ùå –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω API-–∫–ª—é—á GigaChat. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env")

# –£ –Ω–∞—Å –£–ñ–ï –∫–ª—é—á –≤ —Ñ–æ—Ä–º–∞—Ç–µ base64, –ø–æ—ç—Ç–æ–º—É –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –∫–∞–∫ –µ—Å—Ç—å


# -------------------- 1. –ù–ê–°–¢–†–û–ô–ö–ò --------------------
# –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ –Ω–∞—à–µ–π –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
persist_directory = "./chroma_db"

# –í—ã–±–∏—Ä–∞–µ–º —Ç—É –∂–µ –º–æ–¥–µ–ª—å –¥–ª—è —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤, —á—Ç–æ –∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑—ã
embeddings = HuggingFaceEmbeddings(
    model_name='sentence-transformers/paraphrase-multilingual-mpnet-base-v2',
    model_kwargs={'device': 'cpu'}
)



# -------------------- 2. –ó–ê–ì–†–£–ó–ö–ê –ë–ê–ó–´ –ó–ù–ê–ù–ò–ô --------------------
print("üß† –ó–∞–≥—Ä—É–∂–∞—é –±–∞–∑—É –∑–Ω–∞–Ω–∏–π...")
# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—à—É –≤–µ–∫—Ç–æ—Ä–Ω—É—é –±–∞–∑—É –∏–∑ –ø–∞–ø–∫–∏
vector_db = Chroma(
    persist_directory=persist_directory,
    embedding_function=embeddings
)

# -------------------- 3. –ù–ê–°–¢–†–û–ô–ö–ê –ü–†–û–ú–¢–ê --------------------
# –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω (prompt), –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ–±—ä—è—Å–Ω—è—Ç—å GigaChat, –∫–∞–∫ –æ—Ç–≤–µ—á–∞—Ç—å.
# –≠—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ! –ú—ã –≥–æ–≤–æ—Ä–∏–º –º–æ–¥–µ–ª–∏ –æ—Ç–≤–µ—á–∞—Ç—å –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–∑ –Ω–∞—à–µ–π –±–∞–∑—ã.

template = """
–¢—ã ‚Äî –ø–æ–ª–µ–∑–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏—Å–ø–æ–ª—å–∑—É—è –¢–û–õ–¨–ö–û –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç.
–ï—Å–ª–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Ç –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –≤–µ–∂–ª–∏–≤–æ —Å–∫–∞–∂–∏, —á—Ç–æ –Ω–µ –∑–Ω–∞–µ—à—å –æ—Ç–≤–µ—Ç–∞. –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –Ω–∏—á–µ–≥–æ –æ—Ç —Å–µ–±—è.

–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context}

–í–æ–ø—Ä–æ—Å: {question}
"""

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —à–∞–±–ª–æ–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—à–µ–≥–æ —Ç–µ–∫—Å—Ç–∞
PROMPT = PromptTemplate(
    template=template, input_variables=["context", "question"]
)

# ... –∏–º–ø–æ—Ä—Ç—ã –∏ —á—Ç–µ–Ω–∏–µ –∫–ª—é—á–∞ ...

# -------------------- 1. –ù–ê–°–¢–†–û–ô–ö–ò --------------------
# –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ –Ω–∞—à–µ–π –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
persist_directory = "./chroma_db"

# –í—ã–±–∏—Ä–∞–µ–º —Ç—É –∂–µ –º–æ–¥–µ–ª—å –¥–ª—è —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤, —á—Ç–æ –∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑—ã
embeddings = HuggingFaceEmbeddings(
    model_name='sentence-transformers/paraphrase-multilingual-mpnet-base-v2',
    model_kwargs={'device': 'cpu'}
)

# –ù–ê–°–¢–†–ê–ò–í–ê–ï–ú GIGACHAT (–≠–¢–û–¢ –ë–õ–û–ö –î–û–õ–ñ–ï–ù –ë–´–¢–¨ –ó–î–ï–°–¨!)
llm = GigaChat(
    credentials=credentials_b64,
    verify_ssl_certs=False,
    model="GigaChat-Pro", 
    scope="GIGACHAT_API_PERS"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π scope
)

# -------------------- 2. –ó–ê–ì–†–£–ó–ö–ê –ë–ê–ó–´ –ó–ù–ê–ù–ò–ô --------------------
print("üß† –ó–∞–≥—Ä—É–∂–∞—é –±–∞–∑—É –∑–Ω–∞–Ω–∏–π...")
# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—à—É –≤–µ–∫—Ç–æ—Ä–Ω—É—é –±–∞–∑—É –∏–∑ –ø–∞–ø–∫–∏
vector_db = Chroma(
    persist_directory=persist_directory,
    embedding_function=embeddings
)

# -------------------- 3. –ù–ê–°–¢–†–û–ô–ö–ê –ü–†–û–ú–¢–ê --------------------
template = """
–¢—ã ‚Äî –ø–æ–ª–µ–∑–Ω—ã–π –ò–ê-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏—Å–ø–æ–ª—å–∑—É—è –¢–û–õ–¨–ö–û –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç.
–ï—Å–ª–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Ç –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –≤–µ–∂–ª–∏–≤–æ —Å–∫–∞–∂–∏, —á—Ç–æ –Ω–µ –∑–Ω–∞–µ—à—å –æ—Ç–≤–µ—Ç–∞. –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –Ω–∏—á–µ–≥–æ –æ—Ç —Å–µ–±—è.

–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context}

–í–æ–ø—Ä–æ—Å: {question}
"""

PROMPT = PromptTemplate(
    template=template, input_variables=["context", "question"]
)

# -------------------- 4. –°–û–ó–î–ê–ù–ò–ï –¶–ï–ü–û–ß–ö–ò –í–û–ü–†–û–°-–û–¢–í–ï–¢ --------------------
# –¢–ï–ü–ï–†–¨ llm –£–ñ–ï –û–ü–†–ï–î–ï–õ–ï–ù –ò –ú–û–ñ–ï–¢ –ë–´–¢–¨ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù
qa_chain = RetrievalQA.from_chain_type(
    llm=llm,  # –¢–µ–ø–µ—Ä—å llm —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    chain_type="stuff",
    retriever=vector_db.as_retriever(search_kwargs={"k": 3}),
    chain_type_kwargs={"prompt": PROMPT},
    return_source_documents=True
)

# ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ ...







# -------------------- 4. –°–û–ó–î–ê–ù–ò–ï –¶–ï–ü–û–ß–ö–ò –í–û–ü–†–û–°-–û–¢–í–ï–¢ --------------------
# –°–æ–∑–¥–∞–µ–º —Ü–µ–ø—å, –∫–æ—Ç–æ—Ä–∞—è –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å—ë –≤–º–µ—Å—Ç–µ: –ø–æ–∏—Å–∫ –≤ –±–∞–∑–µ + –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ GigaChat
qa_chain = RetrievalQA.from_chain_type(
    llm=llm,  # –ù–∞—à–∞ –º–æ–¥–µ–ª—å GigaChat
    chain_type="stuff",
    retriever=vector_db.as_retriever(search_kwargs={"k": 3}),  # –ò—â–µ–º 3 —Å–∞–º—ã—Ö –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞
    chain_type_kwargs={"prompt": PROMPT},  # –ü–µ—Ä–µ–¥–∞–µ–º –Ω–∞—à —à–∞–±–ª–æ–Ω —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
    return_source_documents=True  # –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –Ω–∞–º —É–≤–∏–¥–µ—Ç—å, –∏–∑ –∫–∞–∫–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –±—ã–ª –≤–∑—è—Ç –æ—Ç–≤–µ—Ç
)

print("‚úÖ –ê–≥–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
print("üí° –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å. –î–ª—è –≤—ã—Ö–æ–¥–∞ –≤–≤–µ–¥–∏—Ç–µ '–≤—ã—Ö–æ–¥'.")

# -------------------- 5. –¶–ò–ö–õ –í–û–ü–†–û–°–û–í --------------------
while True:
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    question = input("\n‚ùì –í–∞—à –≤–æ–ø—Ä–æ—Å: ")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–π—Ç–∏
    if question.lower() in ['–≤—ã—Ö–æ–¥', 'exit', 'quit']:
        print("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        break
    
    # –ó–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å –Ω–∞—à–µ–π —Ü–µ–ø–∏ –∏ –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
    result = qa_chain({"query": question})
    
    # –í—ã–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç
    print(f"\nü§ñ –û—Ç–≤–µ—Ç: {result['result']}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –æ—Ç–≤–µ—Ç–∞ (–∏–∑ –∫–∞–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏ —á–∞—Å—Ç–µ–π –±—ã–ª –≤–∑—è—Ç –æ—Ç–≤–µ—Ç)
    print("\nüìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏:")
    for doc in result['source_documents']:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞
        source = doc.metadata.get('source', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫')
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–º—è —Ñ–∞–π–ª–∞, –∞ –Ω–µ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å
        filename = source.split('/')[-1]  # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —á–∞—Å—Ç—å –ø—É—Ç–∏
        print(f"   - {filename}")

