# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
import os
from langchain.document_loaders import TextLoader  # –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
from langchain.text_splitter import RecursiveCharacterTextSplitter  # –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ä–∞–∑–±–∏–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —á–∞—Å—Ç–∏ (—á–∞–Ω–∫–∏)
from langchain.embeddings import HuggingFaceEmbeddings  # –ú–æ–¥–µ–ª—å –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ —á–∏—Å–ª–∞ (–≤–µ–∫—Ç–æ—Ä—ã)
from langchain.vectorstores import Chroma  # –í–µ–∫—Ç–æ—Ä–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö, –≥–¥–µ –º—ã –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—à–∏ –≤–µ–∫—Ç–æ—Ä—ã

# -------------------- 1. –ù–ê–°–¢–†–û–ô–ö–ò --------------------
# –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –Ω–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
data_directory = "data"  # –≠—Ç–æ –∏–º—è –ø–∞–ø–∫–∏, –∫–æ—Ç–æ—Ä—É—é –º—ã —Å–æ–∑–¥–∞–ª–∏

# –í—ã–±–∏—Ä–∞–µ–º –º–æ–¥–µ–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–∫—Ç–æ—Ä–Ω—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π (—ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤).
# 'sentence-transformers/paraphrase-multilingual-mpnet-base-v2' ‚Äî —ç—Ç–æ —É–º–Ω–∞—è –º–æ–¥–µ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–Ω–∏–º–∞–µ—Ç —Å–º—ã—Å–ª —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –º–Ω–æ–≥–∏—Ö —è–∑—ã–∫–∞—Ö, –≤–∫–ª—é—á–∞—è —Ä—É—Å—Å–∫–∏–π.
embeddings_model_name = 'sentence-transformers/paraphrase-multilingual-mpnet-base-v2'

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ –≤–µ–∫—Ç–æ—Ä—ã.
# model_kwargs={'device': 'cpu'} –≥–æ–≤–æ—Ä–∏—Ç –º–æ–¥–µ–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–µ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–∞—á–∞–ª–∞).
embeddings = HuggingFaceEmbeddings(
    model_name=embeddings_model_name,
    model_kwargs={'device': 'cpu'}
)

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º "—Ä–µ–∑—á–∏–∫ —Ç–µ–∫—Å—Ç–∞". –û–Ω –±—É–¥–µ—Ç –¥–µ–ª–∏—Ç—å –±–æ–ª—å—à–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –º–∞–ª–µ–Ω—å–∫–∏–µ, —É–¥–æ–±–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —á–∞—Å—Ç–∏.
text_splitter = RecursiveCharacterTextSplitter(
    chunk_size=1000,   # –†–∞–∑–º–µ—Ä –æ–¥–Ω–æ–≥–æ —á–∞–Ω–∫–∞ ~1000 —Å–∏–º–≤–æ–ª–æ–≤.
    chunk_overlap=200   # –ü–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ –º–µ–∂–¥—É —á–∞–Ω–∫–∞–º–∏ 200 —Å–∏–º–≤–æ–ª–æ–≤, —á—Ç–æ–±—ã –Ω–µ —Ç–µ—Ä—è—Ç—å —Å–º—ã—Å–ª –Ω–∞ —Å—Ç—ã–∫–∞—Ö.
)

# -------------------- 2. –ó–ê–ì–†–£–ó–ö–ê –ò –û–ë–†–ê–ë–û–¢–ö–ê –§–ê–ô–õ–û–í --------------------
# –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫, –∫—É–¥–∞ –º—ã —Å–ª–æ–∂–∏–º –≤—Å–µ –∫—É—Å–æ—á–∫–∏ —Ç–µ–∫—Å—Ç–∞ (—á–∞–Ω–∫–∏) –∏–∑ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤.
all_docs_splits = []

print("üîç –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö...")

# –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —Ñ–∞–π–ª–∞–º –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ 'data'
for filename in os.listdir(data_directory):
    # –°–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    file_path = os.path.join(data_directory, filename)
    print(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª: {filename}")

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
        loader = TextLoader(file_path, encoding='utf-8')
        documents = loader.load()  # –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

        # –†–∞–∑–±–∏–≤–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —á–∞–Ω–∫–∏ —Å –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ "—Ä–µ–∑—á–∏–∫–∞"
        doc_splits = text_splitter.split_documents(documents)

        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —á–∞–Ω–∫–∏ –∏–∑ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫
        all_docs_splits.extend(doc_splits)

    except Exception as e:
        # –ï—Å–ª–∏ —Å –∫–∞–∫–∏–º-—Ç–æ —Ñ–∞–π–ª–æ–º –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ —Ç–æ—Ç —Ñ–æ—Ä–º–∞—Ç), –º—ã –ø—Ä–æ—Å—Ç–æ —Å–æ–æ–±—â–∏–º –æ–± —ç—Ç–æ–º –∏ –ø—Ä–æ–¥–æ–ª–∂–∏–º —Ä–∞–±–æ—Ç—É
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª {filename}: {e}")

# -------------------- 3. –°–û–ó–î–ê–ù–ò–ï –ë–ê–ó–´ –ó–ù–ê–ù–ò–ô --------------------
print("üì¶ –°–æ–∑–¥–∞—é –≤–µ–∫—Ç–æ—Ä–Ω—É—é –±–∞–∑—É –∑–Ω–∞–Ω–∏–π...")

# –¢–µ–ø–µ—Ä—å –º—ã –±–µ—Ä–µ–º –≤—Å–µ –Ω–∞—à–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —á–∞–Ω–∫–∏ (all_docs_splits) –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏—Ö –≤ –≤–µ–∫—Ç–æ—Ä—ã —Å –ø–æ–º–æ—â—å—é –º–æ–¥–µ–ª–∏ (embeddings).
# –≠—Ç–∏ –≤–µ–∫—Ç–æ—Ä—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –≤–µ–∫—Ç–æ—Ä–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Chroma.
# persist_directory="./chroma_db" ‚Äî —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –±–∞–∑–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å—Å—è –Ω–∞ –¥–∏—Å–∫ –≤ –ø–∞–ø–∫—É 'chroma_db'.
vector_db = Chroma.from_documents(
    documents=all_docs_splits,
    embedding=embeddings,
    persist_directory="./chroma_db"  # –ü–∞–ø–∫–∞, –≥–¥–µ –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –Ω–∞—à–∞ "–ø–∞–º—è—Ç—å"
)

# –§–∏–∫—Å–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –¥–∏—Å–∫.
vector_db.persist()

print("‚úÖ –ì–æ—Ç–æ–≤–æ! –í–µ–∫—Ç–æ—Ä–Ω–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ø–∞–ø–∫—É 'chroma_db'.")
print(f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —á–∞–Ω–∫–æ–≤: {len(all_docs_splits)}")
